//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestingForms.FYPServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FYPServiceReference.IFYPGetDataService")]
    public interface IFYPGetDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFYPGetDataService/GetFYPInfo", ReplyAction="http://tempuri.org/IFYPGetDataService/GetFYPInfoResponse")]
        FYPDataService.FYPInfo.Person[] GetFYPInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFYPGetDataService/GetFYPInfo", ReplyAction="http://tempuri.org/IFYPGetDataService/GetFYPInfoResponse")]
        System.Threading.Tasks.Task<FYPDataService.FYPInfo.Person[]> GetFYPInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFYPGetDataService/GetData", ReplyAction="http://tempuri.org/IFYPGetDataService/GetDataResponse")]
        string GetData(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFYPGetDataService/GetData", ReplyAction="http://tempuri.org/IFYPGetDataService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFYPGetDataService/InsertAccount", ReplyAction="http://tempuri.org/IFYPGetDataService/InsertAccountResponse")]
        string InsertAccount(string name, string password, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFYPGetDataService/InsertAccount", ReplyAction="http://tempuri.org/IFYPGetDataService/InsertAccountResponse")]
        System.Threading.Tasks.Task<string> InsertAccountAsync(string name, string password, string type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFYPGetDataServiceChannel : TestingForms.FYPServiceReference.IFYPGetDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FYPGetDataServiceClient : System.ServiceModel.ClientBase<TestingForms.FYPServiceReference.IFYPGetDataService>, TestingForms.FYPServiceReference.IFYPGetDataService {
        
        public FYPGetDataServiceClient() {
        }
        
        public FYPGetDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FYPGetDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FYPGetDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FYPGetDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FYPDataService.FYPInfo.Person[] GetFYPInfo() {
            return base.Channel.GetFYPInfo();
        }
        
        public System.Threading.Tasks.Task<FYPDataService.FYPInfo.Person[]> GetFYPInfoAsync() {
            return base.Channel.GetFYPInfoAsync();
        }
        
        public string GetData(string value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(string value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string InsertAccount(string name, string password, string type) {
            return base.Channel.InsertAccount(name, password, type);
        }
        
        public System.Threading.Tasks.Task<string> InsertAccountAsync(string name, string password, string type) {
            return base.Channel.InsertAccountAsync(name, password, type);
        }
    }
}
